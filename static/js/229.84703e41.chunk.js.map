{"version":3,"file":"static/js/229.84703e41.chunk.js","mappings":"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","sources":["components/SwitchBox/index.js","components/Table/index.js","pages/Total/index.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SwitchBox = (\r\n    {\r\n        styles,\r\n        path_1,\r\n        switchText1,\r\n        path_2,\r\n        switchText2,\r\n        handleClick,\r\n        pagination\r\n    }\r\n) => {\r\n    const history = useNavigate();\r\n\r\n    return (\r\n        <div className={styles.switchBox}>\r\n            <div className={styles.switchButton}>\r\n                <button\r\n                    className={styles.switch1}\r\n                    onClick={() => history(path_1)}\r\n                >\r\n                    {switchText1}\r\n                </button>\r\n\r\n                <button\r\n                    className={styles.switch2}\r\n                    onClick={() => history(path_2)}\r\n                >\r\n                    {switchText2}\r\n                </button>\r\n            </div>\r\n\r\n            <button\r\n                className={styles.pagination}\r\n                onClick={() => handleClick()}\r\n            >\r\n                {pagination ? '关闭分页' : '开启分页'}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SwitchBox;\r\n\r\nSwitchBox.propTypes = {\r\n    styles: PropTypes.object,\r\n    path_1: PropTypes.string,\r\n    switchText1: PropTypes.string,\r\n    path_2: PropTypes.string,\r\n    switchText2: PropTypes.string,\r\n    handleClick: PropTypes.func,\r\n    pagination: PropTypes.bool.isRequired\r\n};","import { useState } from 'react';\r\nimport { Table as ATable } from 'antd';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport 'antd/dist/antd.min.css';\r\n\r\nconst Table = (\r\n    {\r\n        styles,\r\n        rankData,\r\n        pagination,\r\n        title,\r\n        mod\r\n    }\r\n) => {\r\n    const { Column, ColumnGroup } = ATable;\r\n\r\n    const [pageSize, setPageSize] = useState(50);\r\n\r\n    // 处理圈速显示格式\r\n    const handleSpeed = (speed) => {\r\n        let time = '';\r\n        let minute = Math.floor(speed / 60);\r\n        let second = Math.round((speed - minute * 60) * 100) / 100;\r\n\r\n        if (speed < 120) {\r\n            speed % 1 === 0\r\n                ? second < 10\r\n                    ? time = `${minute}:0${second}.00`\r\n                    : time = `${minute}:${second}.00`\r\n                : second < 10\r\n                    ? second * 100 % 10 === 0\r\n                        ? time = `${minute}:0${second}0`\r\n                        : time = `${minute}:0${second}`\r\n                    : second * 100 % 10 === 0\r\n                        ? time = `${minute}:${second}0`\r\n                        : time = `${minute}:${second}`;\r\n        } else {\r\n            time = '时间太长，教主的身体吃不消了!';\r\n        }\r\n\r\n        return time;\r\n    };\r\n\r\n    return (\r\n        <ATable\r\n            title={() => title}\r\n            bordered={true}\r\n            dataSource={rankData}\r\n            size={'small'}\r\n            sticky={true}\r\n            scroll={{ x: 'max-content' }}\r\n            pagination={pagination\r\n                ? {\r\n                    position: ['topRight'],\r\n                    pageSize: pageSize,\r\n                    pageSizeOptions: [10, 20, 25, 50, 100],\r\n                    onChange: (page, pageSize) => setPageSize(pageSize)\r\n                }\r\n                : false\r\n            }\r\n            onRow={(val) => {\r\n                return {\r\n                    className: val.speed < 70\r\n                        ? `${styles.kbracer} ${styles.kbracer1}`\r\n                        : val.speed < 73\r\n                            ? `${styles.kbracer} ${styles.kbracer2}`\r\n                            : val.speed < 76\r\n                                ? `${styles.kbracer} ${styles.kbracer3}`\r\n                                : val.speed < 79\r\n                                    ? `${styles.kbracer} ${styles.kbracer4}`\r\n                                    : val.speed < 82\r\n                                        ? `${styles.kbracer} ${styles.kbracer5}`\r\n                                        : `${styles.kbracer} ${styles.kbracer6}`\r\n                }\r\n            }}\r\n        >\r\n            <Column\r\n                title=\"排名\"\r\n                dataIndex=\"key\"\r\n                key=\"key\"\r\n                align=\"center\"\r\n                width=\"3%\"\r\n            />\r\n            <Column\r\n                title=\"车型\"\r\n                dataIndex=\"car\"\r\n                key=\"car\"\r\n                width=\"10%\"\r\n            />\r\n            <Column\r\n                className={styles.highlight}\r\n                title=\"圈速\"\r\n                dataIndex=\"speed\"\r\n                key=\"speed\"\r\n                align=\"center\"\r\n                width=\"8%\"\r\n                render={(text) => handleSpeed(text)}\r\n            />\r\n            {\r\n                mod &&\r\n                <Column\r\n                    title=\"改装\"\r\n                    dataIndex=\"mod\"\r\n                    key=\"mod\"\r\n                    align=\"center\"\r\n                    width=\"5%\"\r\n                    render={(text) => text ? <CheckOutlined /> : <CloseOutlined />}\r\n                />\r\n            }\r\n            <Column\r\n                title=\"气温 (℃)\"\r\n                dataIndex=\"temperature\"\r\n                key=\"temperature\"\r\n                align=\"center\"\r\n                width=\"5%\"\r\n            />\r\n            <Column\r\n                className={styles.highlight}\r\n                title=\"尾速(km/h)\"\r\n                dataIndex=\"limit\"\r\n                key=\"limit\"\r\n                align=\"center\"\r\n                width=\"5%\"\r\n            />\r\n            <Column\r\n                title=\"0-100(s)\"\r\n                dataIndex=\"accelerate\"\r\n                key=\"accelerate\"\r\n                align=\"center\"\r\n                width=\"5%\"\r\n            />\r\n            <Column\r\n                title=\"马力 (Ps)\"\r\n                dataIndex=\"hp_content\"\r\n                key=\"hp_content\"\r\n                align=\"center\"\r\n                width=\"5%\"\r\n            />\r\n            <Column\r\n                title=\"动力总成\"\r\n                dataIndex=\"Powertrain\"\r\n                key=\"Powertrain\"\r\n                width=\"10%\"\r\n            />\r\n            <ColumnGroup title={() => '轮胎'}>\r\n                <Column\r\n                    title=\"前轮\"\r\n                    dataIndex=\"tyre_type_f\"\r\n                    key=\"tyre_type_f\"\r\n                    width=\"6%\"\r\n                    onCell={(res) => {\r\n                        if (res.tyre_type_f === res.tyre_type_r) {\r\n                            return {\r\n                                colSpan: 2,\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n                <Column\r\n                    title=\"后轮\"\r\n                    dataIndex=\"tyre_type_r\"\r\n                    key=\"tyre_type_r\"\r\n                    width=\"6%\"\r\n                    onCell={(res) => {\r\n                        if (res.tyre_type_f === res.tyre_type_r) {\r\n                            return {\r\n                                colSpan: 0,\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n                <Column\r\n                    title=\"前宽\"\r\n                    dataIndex=\"tyre_width_f\"\r\n                    key=\"tyre_width_f\"\r\n                    align=\"center\"\r\n                    width=\"5%\"\r\n                    onCell={(res) => {\r\n                        if (res.tyre_width_f === res.tyre_width_r) {\r\n                            return {\r\n                                colSpan: 2,\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n                <Column\r\n                    title=\"后宽\"\r\n                    dataIndex=\"tyre_width_r\"\r\n                    key=\"tyre_width_r\"\r\n                    align=\"center\"\r\n                    width=\"5%\"\r\n                    onCell={(res) => {\r\n                        if (res.tyre_width_f === res.tyre_width_r) {\r\n                            return {\r\n                                colSpan: 0,\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            </ColumnGroup>\r\n            <Column\r\n                title=\"圈速视频\"\r\n                dataIndex=\"Btitle\"\r\n                key=\"Btitle\"\r\n                render={(text, record) => record.BURL\r\n                    ? <a href={record.BURL}>{text}</a>\r\n                    : <span>{text}</span>}\r\n            />\r\n        </ATable>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n\r\nTable.propTypes = {\r\n    styles: PropTypes.object,\r\n    rankData: PropTypes.array.isRequired,\r\n    pagination: PropTypes.bool,\r\n    title: PropTypes.node,\r\n    mod: PropTypes.bool\r\n};","import { useState } from 'react';\r\n\r\nimport { useData } from '../index';\r\nimport { BASE_URL } from '../../utlis';\r\nimport Table from '../../components/Table';\r\nimport SwitchBox from '../../components/SwitchBox';\r\n\r\nimport 'antd/dist/antd.min.css';\r\n\r\nimport styles from '../index.module.css';\r\n\r\nconst Total = () => {\r\n  // 获取数据\r\n  const { totalData } = useData();\r\n\r\n  // 每个表格的分页状态单独控制\r\n  const [pagination, setPagination] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <SwitchBox\r\n        styles={styles}\r\n        path_1={`${BASE_URL}original`}\r\n        switchText1={'切换到原厂榜'}\r\n        path_2={`${BASE_URL}mod`}\r\n        switchText2={'切换到改装榜'}\r\n        handleClick={() => setPagination(prevState => !prevState)}\r\n        pagination={pagination}\r\n      />\r\n      <Table\r\n        styles={styles}\r\n        rankData={totalData}\r\n        title={<span>总榜</span>}\r\n        pagination={pagination}\r\n        mod={true}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Total; "],"names":["styles","path_1","switchText1","path_2","switchText2","handleClick","pagination","history","useNavigate","className","switchBox","switchButton","switch1","onClick","switch2","rankData","title","mod","Column","ATable","ColumnGroup","useState","pageSize","setPageSize","bordered","dataSource","size","sticky","scroll","x","position","pageSizeOptions","onChange","page","onRow","val","speed","kbracer","kbracer1","kbracer2","kbracer3","kbracer4","kbracer5","kbracer6","dataIndex","align","width","highlight","render","text","minute","Math","floor","second","round","handleSpeed","onCell","res","tyre_type_f","tyre_type_r","colSpan","tyre_width_f","tyre_width_r","record","BURL","href","totalData","useData","setPagination","BASE_URL","prevState"],"sourceRoot":""}